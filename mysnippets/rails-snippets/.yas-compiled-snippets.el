;;; Compiled snippets and support files for `rails-snippets'
;;; Snippet definitions:
;;;
(yas-define-snippets 'rails-snippets
		     '(("%" "<%$0 -%>\n" "<%$. -%>" nil nil nil nil nil nil)
		       ("%%" "<%=$0 %>\n" "<%=$. %>" nil nil nil nil nil nil)
		       ("%ft" "<% form_tag(:action => \"${update}\") do %>\n$0\n<% end %>\n" "<% form_tag(:action => \" ... \") do %> ... <% end  %>" nil nil nil nil nil nil)
		       ("%h" "<%=h ${@item} %>\n" "<%=h  ...  %>" nil nil nil nil nil nil)
		       ("%if" "<% if ${cond} -%>\n$0\n<% end -%>\n" "<% if  ...  -%> $. <% end -%>" nil nil nil nil nil nil)
		       ("%ifel" "<% if $0cond} -%>\n$0\n<% else -%>\n<% end -%>\n" "<% if  ...  -%> $. <% else -%> <% end -%>" nil nil nil nil nil nil)
		       ("%lia" "<%= link_to \"${title}\", :action => \"${index}\" %>$0" "<%= link_to \" ... \", :action => \" ... \" %>" nil nil nil nil nil nil)
		       ("%liai" "<%= link_to \"${title}\", :action => \"${edit}\", :id => ${@item} %>$0" "<%= link_to \" ... \", :action => \" ... \", :id =>  ...  %>" nil nil nil nil nil nil)
		       ("%lic" "<%= link_to \"${title}\", :controller => \"${items}\" %>$0" "<%= link_to \" ... \", :controller => \" ... \" %>" nil nil nil nil nil nil)
		       ("%lica" "<%= link_to \"${title}\", :controller => \"${items}\", :action => \"${index}\" %>$0" "<%= link_to \" ... \", :controller => \" ... \", :action => \" ... \" %>" nil nil nil nil nil nil)
		       ("%licai" "<%= link_to \"${title}\", :controller => \"${items}\", :action => \"${edit}\", :id => ${@item} %>$0" "<%= link_to \" ... \", :controller => \" ... \", :action => \" ... \", :id =>  ...  %>" nil nil nil nil nil nil)
		       ("%rp" "<%= render(:partial => \"${action}\"$0 ) %>" "<%= render(:partial => ... ) %>" nil nil nil nil nil nil)
		       ("%ta" "<%= text_area(\"${object_name}\", \"${method}\"$0) %>\n" "<%= text_area(\" ... \", \" ... \") %>" nil nil nil nil nil nil)
		       ("%tf" "<%= text_field(\"${object_name} \", \"${method}\"$0) %>" "<%= text_field(\" ... \", \" ... \") %>" nil nil nil nil nil nil)
		       ("%unless" "<% unless ${cond} -%>\n$0\n<% end -%>\n" "<% unless  ...  -%> $. <% end -%>" nil nil nil nil nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rails-snippets
		     '(("%" "<%$0 -%>\n" "<%$. -%>" nil nil nil nil nil nil)
		       ("%%" "<%=$0 %>\n" "<%=$. %>" nil nil nil nil nil nil)
		       ("%ft" "<% form_tag(:action => \"${update}\") do %>\n$0\n<% end %>\n" "<% form_tag(:action => \" ... \") do %> ... <% end  %>" nil nil nil nil nil nil)
		       ("%h" "<%=h ${@item} %>\n" "<%=h  ...  %>" nil nil nil nil nil nil)
		       ("%if" "<% if ${cond} -%>\n$0\n<% end -%>\n" "<% if  ...  -%> $. <% end -%>" nil nil nil nil nil nil)
		       ("%ifel" "<% if $0cond} -%>\n$0\n<% else -%>\n<% end -%>\n" "<% if  ...  -%> $. <% else -%> <% end -%>" nil nil nil nil nil nil)
		       ("%lia" "<%= link_to \"${title}\", :action => \"${index}\" %>$0" "<%= link_to \" ... \", :action => \" ... \" %>" nil nil nil nil nil nil)
		       ("%liai" "<%= link_to \"${title}\", :action => \"${edit}\", :id => ${@item} %>$0" "<%= link_to \" ... \", :action => \" ... \", :id =>  ...  %>" nil nil nil nil nil nil)
		       ("%lic" "<%= link_to \"${title}\", :controller => \"${items}\" %>$0" "<%= link_to \" ... \", :controller => \" ... \" %>" nil nil nil nil nil nil)
		       ("%lica" "<%= link_to \"${title}\", :controller => \"${items}\", :action => \"${index}\" %>$0" "<%= link_to \" ... \", :controller => \" ... \", :action => \" ... \" %>" nil nil nil nil nil nil)
		       ("%licai" "<%= link_to \"${title}\", :controller => \"${items}\", :action => \"${edit}\", :id => ${@item} %>$0" "<%= link_to \" ... \", :controller => \" ... \", :action => \" ... \", :id =>  ...  %>" nil nil nil nil nil nil)
		       ("%rp" "<%= render(:partial => \"${action}\"$0 ) %>" "<%= render(:partial => ... ) %>" nil nil nil nil nil nil)
		       ("%ta" "<%= text_area(\"${object_name}\", \"${method}\"$0) %>\n" "<%= text_area(\" ... \", \" ... \") %>" nil nil nil nil nil nil)
		       ("%tf" "<%= text_field(\"${object_name} \", \"${method}\"$0) %>" "<%= text_field(\" ... \", \" ... \") %>" nil nil nil nil nil nil)
		       ("%unless" "<% unless ${cond} -%>\n$0\n<% end -%>\n" "<% unless  ...  -%> $. <% end -%>" nil nil nil nil nil nil)))


;;; Snippet definitions:
;;;
(yas-define-snippets 'rails-snippets
		     '(("ae" "assert_equal ${expected}, ${actual}\n" "assert_equal  ... ,  ... " nil nil nil nil nil nil)
		       ("ako" "assert_kind_of ${class}, ${object}\n" "assert_kind_of  ... ,  ... " nil nil nil nil nil nil)
		       ("ann" "assert_not_nil ${object}\n" "assert_not_nil  ... " nil nil nil nil nil nil)
		       ("ar" "assert_raises ${Exception} { $. }\n" "assert_raises  ...  { $. }" nil nil nil nil nil nil)
		       ("ars" "assert_response :${success}\n" "assert_response : ... " nil nil nil nil nil nil)
		       ("art" "assert_redirected_to :controller => \"${controller}\"\n" "assert_redirected_to :controller => \" ... \"" nil nil nil nil nil nil)
		       ("bt" "belongs_to :${class}\n" "belongs_to : ... " nil nil nil nil nil nil)
		       ("flsh" "flash[:${notice}] = \"${Text here...}\"\n" "flash[: ... ] = \" ... \"" nil nil nil nil nil nil)
		       ("hm" "has_many :${class}\n" "has_many : ... " nil nil nil nil nil nil)
		       ("ho" "has_one :${class}\n" "has_one : ... " nil nil nil nil nil nil)
		       ("logi" "logger.info \"${Text here...}\"\n" "logger.info \" ... \"" nil nil nil nil nil nil)
		       ("par" "params[:${id}]\n" "params[: ... ]" nil nil nil nil nil nil)
		       ("ra" "render :action => \"${action}\"\n" "render :action => \" ... \"" nil nil nil nil nil nil)
		       ("ral" "render :action => \"${action}\", :layout => \"${layoutname}\"\n" "render :action => \" ... \", :layout => \" ... \"" nil nil nil nil nil nil)
		       ("rcea" "render_component :action => \"${index}\"\n" "render_component :action => \" ... \"" nil nil nil nil nil nil)
		       ("rcec" "render_component :controller => \"${items}\"\n" "render_component :controller => \" ... \"" nil nil nil nil nil nil)
		       ("rceca" "render_component :controller => \"${items}\", :action => \"${index}\"\n" "render_component :controller => \" ... \", :action => \" ... \"" nil nil nil nil nil nil)
		       ("rea" "redirect_to :action => \"${index}\"\n" "redirect_to :action => \" ... \"" nil nil nil nil nil nil)
		       ("reai" "redirect_to :action => \"${show}\", :id => ${@item}\n" "redirect_to :action => \" ... \", :id =>  ... " nil nil nil nil nil nil)
		       ("rec" "redirect_to :controller => \"${items}\"\n" "redirect_to :controller => \" ... \"" nil nil nil nil nil nil)
		       ("reca" "redirect_to :controller => \"${items}\", :action => \"${list}\"\n" "redirect_to :controller => \" ... \", :action => \" ... \"" nil nil nil nil nil nil)
		       ("recai" "redirect_to :controller => \"${items}\", :action => \"${show}\", :id => ${@item}\n" "redirect_to :controller => \" ... \", :action => \" ... \", :id =>  ... " nil nil nil nil nil nil)
		       ("rf" "render :file => \"${filepath}\"\n" "render :file => \" ... \"" nil nil nil nil nil nil)
		       ("rfu" "render :file => \"${filepath}\", :use_full_path => ${false}\n" "render :file => \" ... \", :use_full_path =>  ... " nil nil nil nil nil nil)
		       ("ri" "render :inline => \"${<%= 'hello' %>}\"\n" "render :inline => \" ... \"" nil nil nil nil nil nil)
		       ("ril" "render :inline => \"${<%= 'hello' %>}\", :locals => { ${name} => \"${value}\" }\n" "render :inline => \" ... \", :locals => {  ...  => \" ... \" }" nil nil nil nil nil nil)
		       ("rit" "render :inline => \"${<%= 'hello' %>}\", :type => :${rxml})\n" "render :inline => \" ... \", :type => : ... )" nil nil nil nil nil nil)
		       ("rl" "render :layout => \"${layoutname}\"\n" "render :layout => \" ... \"" nil nil nil nil nil nil)
		       ("rn" "render :nothing => ${true}\n" "render :nothing =>  ... " nil nil nil nil nil nil)
		       ("rns" "render :nothing => ${true}, :status => ${401}\n" "render :nothing =>  ... , :status =>  ... " nil nil nil nil nil nil)
		       ("rp" "render :partial => \"${item}\"\n" "render :partial => \" ... \"" nil nil nil nil nil nil)
		       ("rpc" "render :partial => \"${item}\", :collection => ${items}\n" "render :partial => \" ... \", :collection =>  ... " nil nil nil nil nil nil)
		       ("rpl" "render :partial => \"${item}\", :locals => { :${name} => \"${value}\"}\n" "render :partial => \" ... \", :locals => { : ...  => \" ... \"}" nil nil nil nil nil nil)
		       ("rpo" "render :partial => \"${item}\", :object => ${object}\n" "render :partial => \" ... \", :object =>  ... " nil nil nil nil nil nil)
		       ("rps" "render :partial => \"${item}\", :status => ${500}\n" "render :partial => \" ... \", :status =>  ... " nil nil nil nil nil nil)
		       ("rt" "render :text => \"${Text here...}\"\n" "render :text => \" ... \"" nil nil nil nil nil nil)
		       ("rtl" "render :text => \"${Text here...}\", :layout => \"${layoutname}\"\n" "render :text => \" ... \", :layout => \" ... \"" nil nil nil nil nil nil)
		       ("rtlt" "render :text => \"${Text here...}\", :layout => ${true}\n" "render :text => \" ... \", :layout =>  ... " nil nil nil nil nil nil)
		       ("rts" "render :text => \"${Text here...}\", :status => ${401}\n" "render :text => \" ... \", :status =>  ... " nil nil nil nil nil nil)
		       ("ses" "session[:${user}]\n" "session[: ... ]" nil nil nil nil nil nil)
		       ("va" "validates_associated :${attr}\n" "validates_associated : ... " nil nil nil nil nil nil)
		       ("vc" "validates_confirmation_of :${attr}\n" "validates_confirmation_of : ... " nil nil nil nil nil nil)
		       ("ve" "validates_exclusion_of :${attr}\n" "validates_exclusion_of : ... " nil nil nil nil nil nil)
		       ("vf" "validates_format_of :${attr}, :with => /${regex}/\n" "validates_format_of : ... , :with => / ... /" nil nil nil nil nil nil)
		       ("vn" "validates_numericality_of :${attr}\n" "validates_numericality_of : ... " nil nil nil nil nil nil)
		       ("vp" "validates_presence_of :${attr}\n" "validates_presence_of : ... " nil nil nil nil nil nil)
		       ("vu" "validates_uniqueness_of :${attr}\n" "validates_uniqueness_of : ... " nil nil nil nil nil nil)))


;;; Do not edit! File generated at Sun Aug 24 02:45:39 2014
